{"version":3,"sources":["components/b-ball.png","components/hoopitapp-logo.png","config.js","components/EditProfile.js","components/SearchCity.js","components/mapStyles.js","components/Map.js","components/Home.js","components/Nav.js","components/Signin.js","components/Signup.js","components/UserMain.js","components/CreateGame.js","components/GameDetail.js","components/TeamDetail.js","components/GameAdmin.js","components/ChatInput.js","components/ChatMessage.js","components/Chat.js","components/ChatPage.js","components/EachTeam.js","components/TeamsInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EditProfile","state","loggedInUser","handleEditProfile","e","preventDefault","username","target","changeName","value","location","changeCity","id","props","_id","axios","post","config","withCredentials","then","res","console","log","data","catch","err","this","getUser","games","get","setState","className","onSubmit","class","for","type","aria-describedby","placeholder","name","React","Component","SearchCity","panTo","usePlacesAutoComplete","requestOptions","lat","lng","radius","ready","suggestions","status","setValue","clearSuggestions","onSelect","address","a","getGeocode","results","getLatLng","onChange","disabled","map","description","key","libraries","mapContainerStyle","width","height","styles","position","Map","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","useState","markers","setMarkers","selected","setSelected","hits","setData","mapRef","useRef","onMapLoad","useCallback","current","game","time","Date","setZoom","options","mapStyles","disableDefaultUI","zoomControl","Locate","zoom","center","onLoad","marker","toISOString","icon","url","bball","scaledSize","window","google","maps","Size","origin","Point","anchor","onClick","onCloseClick","to","createdBy","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","Home","src","hoopitappLogo","Nav","alt","onLogout","Signin","onSignIn","htmlFor","Signup","onSignUp","UserMain","getGames","response","history","push","el","index","date","maxPlayers","players","length","city","includes","CreateGame","teams","onAddGame","required","handleLocationInput","team","owner","teamName","GameDetail","player","handleJoinGame","list","concat","sendNewPlayers","alert","match","params","gameId","handleQuitGame","confirm","userNames","i","users","prop","TeamsDetail","saveTeam","homeTown","hoometown","GameAdmin","makeTeam","ChatInput","message","action","onSubmitMessage","split","slice","join","URL","Chat","messages","ws","WebSocket","addMessage","submitMessage","messageString","send","JSON","stringify","onopen","onmessage","evt","parse","onclose","ChatMessage","ChatPage","EachTeam","openForm","document","getElementById","style","display","closeForm","teamId","gamesPlayed","doobs","TeamsInfo","handleQuitTeam","val1","val2","handleDisbandTeam","delete","playerIds","playerNames","forEach","eachId","j","uniqueArray","filter","item","pos","self","indexOf","bind","App","handleSignUp","email","password","handleSignIn","handleLogout","cookie","obj","handleAddGame","getUsers","exact","path","render","routeProps","useTeam","handleUseTeam","withRouter","Boolean","hostname","ReactDOM","serviceWorker","registration","unregister","error"],"mappings":"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vE,G,MAAA,CACX,CACI,YAAe,iBACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,iBACf,YAAe,mBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,YACf,YAAe,gBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,gBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,MACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,OACf,YAAe,WACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,gBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,QAI1B,CACI,YAAe,OACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,OACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,OACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,SAI1B,CACI,YAAe,OACf,YAAe,qBACf,QAAW,CACP,CACI,WAAc,OAElB,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,eACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,eACf,YAAe,kBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,WAEb,CACI,OAAU,UAItB,CACI,YAAe,gBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,gBACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,aACf,YAAe,gBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,WAEb,CACI,OAAU,OAItB,CACI,YAAe,aA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","file":"static/js/main.a48d554d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/b-ball.15d3d634.png\";","module.exports = __webpack_public_path__ + \"static/media/hoopitapp-logo.7a97933b.png\";","export default {\n    API_URL: 'http://localhost:5000/api' ||'https://hoopitapp.herokuapp.com/api'\n\n}","import React from 'react';\nimport axios from 'axios'\nimport config from '../config';\n\nexport default class EditProfile extends React.Component {\n\n    state = {\n        loggedInUser: ''\n\n    }\n\n    componentDidMount(){\n        this.getUser()\n        console.log(this.state)\n       console.log('Games from User Main:   ---   ' + this.state.games)\n        \n      }\n\n      getUser(){\n        axios.get(`${config.API_URL}/user`, {withCredentials: true})\n        .then((res) => {\n          // console.log(res + 'ResuLT')\n          this.setState({\n            loggedInUser: res.data\n          })\n        })\n          \n      }\n    handleEditProfile = (e) => {\n        e.preventDefault()\n        let username = e.target.changeName.value\n        let location = e.target.changeCity.value\n        let id = this.props.loggedInUser._id\n        if(username && !location){\n            axios.post(`${config.API_URL}/edit-profile/${id}`, {\n                username: username,\n                location: this.props.loggedInUser.location\n            },{withCredentials: true})\n                .then((res) => {\n                 console.log('Profile Edited' + res.data)  \n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n\n        } else if (!username && location) {\n            axios.post(`${config.API_URL}/edit-profile/${id}`, {\n                username: this.props.loggedInUser.username,\n                location: location\n            },{withCredentials: true})\n                .then((res) => {\n                 console.log('Profile Edited' + res.data)  \n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n\n        } else if(!username && !location){\n            axios.post(`${config.API_URL}/edit-profile/${id}`, {\n                username: this.props.loggedInUser.username,\n                location: this.props.loggedInUser.location\n            },{withCredentials: true})\n                .then((res) => {\n                 console.log('Profile Edited' + res.data)  \n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n\n        \n    } else {\n            axios.post(`${config.API_URL}/edit-profile/${id}`, {\n                username: username,\n                location: location\n            },{withCredentials: true})\n                .then((res) => {\n                 console.log('Profile Edited' + res.data)  \n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n\n        }\n        \n    }\n\n    render() {\n\n        return(\n            <div>\n            \n            <form className=\"form-container\" onSubmit={this.handleEditProfile}>\n            <h1>Edit Profile Page</h1>\n                <div class=\"form-group\">\n                    <label for=\"changeName\"></label>\n                    <input type=\"text\" class=\"form-control\" id=\"changeName\" aria-describedby=\"changeName\" placeholder=\"Change Name\" name=\"changeName\"></input>\n                    <small id=\"emailHelp\" class=\"form-text text-muted\"></small>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"changeCity\"></label>\n                    <input type=\"text\" class=\"form-control\" id=\"changeCity\" placeholder=\"Change City\" name=\"changeCity\"></input>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </form>\n            \n            \n            </div>\n        )\n\n    }\n    \n}\n","import React from 'react';\n\nimport usePlacesAutoComplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\n\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n} from \"@reach/combobox\";\n\n\nexport default function SearchCity({ panTo }) {\n    //API HOOK\n    const {\n        ready, \n        value, \n        suggestions: {status, data}, \n        setValue, \n        clearSuggestions\n    } = usePlacesAutoComplete({\n        requestOptions: {\n            location: {lat: () => 52.5200, lng: () => 13.4050 },\n            radius: 200 * 1000,\n        },\n\n    });\n        \n    return (\n    <div className=\"map-search\">\n        <Combobox \n            onSelect = {async (address) => {\n                //UPDATE STATE\n                setValue(address, false);\n                clearSuggestions();\n                \n                try {\n                    const results = await getGeocode({address})\n                    //GET LAT AND LNG FROM INPUT\n                    const {lat, lng } = await getLatLng(results[0]);\n                    //PAN TO INPUT\n                    panTo({ lat, lng, address, value })\n                    // console.log(lat, lng)\n                } catch (err){\n                    console.log(err + 'ERROR!')\n                }\n                // console.log(address);\n        }}\n        >\n\n            <ComboboxInput \n                value={value} \n                onChange={(e) => {\n                    setValue(e.target.value);\n                    console.log(value)\n                }}\n                disabled={!ready} \n                placeholder = \"Enter an address\"\n\n            />\n            <ComboboxPopover>\n                <ComboboxList>\n                    {status === 'OK' && \n                        \n                    data.map(({id, description}) => ( <ComboboxOption key={id} value={description}/>\n                    ))}\n                </ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n\n    </div>\n    )\n}","export default [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#a7a7a7\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#737373\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#dadada\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffa000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffa000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffa000\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            },\n            {\n                \"color\": \"#ffa000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffa000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffa000\"\n            },\n            {\n                \"weight\": \"0.44\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffa000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffa000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffcf7f\"\n            },\n            {\n                \"weight\": 1.8\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffa000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#808080\"\n            },\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#abd5fa\"\n            }\n        ]\n    }\n]\n\n","import React from 'react';\nimport '../App.css';\nimport bball from './b-ball.png'\nimport SearchCity from './SearchCity'\nimport axios from 'axios'\nimport config from '../config';\nimport {Link} from 'react-router-dom'\n\nimport {\n    \n    GoogleMap,\n    useLoadScript,\n    Marker,\n    InfoWindow,\n} from \"@react-google-maps/api\";\nimport { formRelative, formatRelative } from \"date-fns\";\n\nimport usePlacesAutoComplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\n\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\n\n//Import styles\nimport mapStyles from \"./mapStyles\"\n\n\n//PROPS VARIABLES\nconst libraries = [\"places\"]\n\nconst mapContainerStyle = {\n    width: '600px', \n    height: '400px'\n    \n}\nconst styles = { width: '100%', height: '100%', position: 'absolute'};\n\n\n\nexport default function Map(props) {\n    const {isLoaded, loadError} = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n\n    //MARKER HOOKS (SET STATE)\n    const [markers, setMarkers] = React.useState([])\n    const [selected, setSelected] = React.useState(null);\n\n    const [games, setData] = React.useState({ hits: [] });\n\n    // const onMapClick = React.useCallback((event) => {\n    //     console.log(event)\n    //     // Get Markers on Click\n    //     setMarkers(current => [\n    //         ...current, \n    //         {\n    //             lat:event.latLng.lat(),\n    //             lng: event.latLng.lng(),\n    //             time: new Date()\n    //     },\n    // ]);\n    \n    // }, []);\n    console.log(games.data + 'ogugvk')\n    //RETAIN STATE WITHOUT CAUSING RERENDERS\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n        console.log(props.games + 'THESE HERE GAMES!')\n        \n        //GET GAMES FROM API\n            axios.get(`${config.API_URL}/user-main`, {withCredentials: true})\n              .then((games) => {\n                //   SET GAMES IN HOOK STATE\n                setData(games)\n                games.data.map((game) => {\n                    return setMarkers(current => [\n                        ...current, \n                        {\n                            lat: game.lat,\n                            lng: game.lng,\n                            time: new Date()\n                    },\n           \n                ]);\n                })\n              })  \n\n    }, []);\n\n    //PAN TO LAT AND LONG OF INPUT\n    const panTo = React.useCallback(({lat, lng}) => {\n        mapRef.current.panTo({lat, lng});\n        mapRef.current.setZoom(14);\n    }, []);\n\n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Maps\";\n\n    const center = {\n        lat: 52.5200,\n        lng: 13.4050,\n    }\n    const options = {\n        styles: mapStyles,\n        disableDefaultUI: true,\n        zoomControl: true,\n    }\n   \n    // const user =  props.loggedInUser.username\n\n    return <div className=\"front-page-map-container\">\n    \n        <SearchCity panTo={panTo}/>\n        <Locate panTo={panTo}/>\n\n        <GoogleMap \n            styles={styles}\n            mapContainerStyle={mapContainerStyle}\n            zoom={10}\n            center={center}\n            options={options}\n            // onClick={onMapClick}\n            onLoad={onMapLoad}\n        >\n            {markers.map((marker => <Marker \n                key={marker.time.toISOString} \n                position={{lat: marker.lat, lng: marker.lng}} \n                icon={{\n                    url: bball,\n                    scaledSize: new window.google.maps.Size(30, 30),\n                    origin: new window.google.maps.Point(0,0),\n                    anchor: new window.google.maps.Point(15,15)\n                }}\n                onClick={() => {\n                    setSelected(marker)\n\n                }}\n            />\n            ))}\n\n            {selected ? (\n                <InfoWindow position={{lat:selected.lat, lng:selected.lng}} onCloseClick={() =>{setSelected(null)}}>\n            \n                <div>\n                    \n                    {games.data.map((game)=> {\n                         \n                        if(game.lat === selected.lat){\n                            return <div>\n                                        <Link to={`/game-detail/${game._id}`}><h2>Game</h2></Link>\n                                        <p> Created By: {game.createdBy}</p>\n                                        <p> Location: {game.location}</p>\n                                        <p>Time: {game.time}</p>\n                                   </div>\n                        }\n                        \n                    })}\n                    {/* <p>Marked at {formatRelative(selected.time, new Date())}</p> */}\n                </div>\n            </InfoWindow>) : null}\n        </GoogleMap>\n\n    </div>\n}\n\nfunction Locate({panTo}) {\n    return <button className=\"locate-btn\" onClick={() => {\n        navigator.geolocation.getCurrentPosition((position)=> {\n            panTo({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n            })\n        }, \n        () => null\n        );\n    }}>\n                {/* <img src={bball}></img> */}\n            </button>\n}\n\n","import React from 'react';\nimport Map from './Map'\nimport axios from 'axios'\nimport config from '../config';\nimport hoopitappLogo from './hoopitapp-logo.png'\n\nexport default class Home extends React.Component {\n\n    \n\n        render(){\n\n            return(\n\n                <div className=\"homeLogo\">\n                    <div>\n                        {/* <Map \n                            \n                        /> */}\n                        <img src={hoopitappLogo}></img>\n\n                    </div>\n            \n                </div>\n            )\n\n        }\n        \n\n    \n    \n\n    \n}\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport bball from './b-ball.png'\n\n\nexport default function Nav(props) {\n    return(\n        <nav class=\"navbar navbar-light bg-light\">\n        <ul className=\"nav \">\n            <li className=\"nav-item\">\n            <Link to=\"/\" > \n                <img src={ bball } width=\"50\" height=\"50\" class=\"d-inline-block align-top\" alt=\"\"></img> \n            </Link>\n                \n            </li>\n            {\n                props.loggedInUser ? (\n                    <div className=\"logged-in-container\">\n\n                    <li className=\"nav-item\">\n                       <Link className=\"nav-link\" to=\"/user-main\">Home</Link>\n                    </li>\n                    \n                    <li className=\"nav-item\">\n                       <Link className=\"nav-link\" to=\"/team-info\">Teams</Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                       <Link className=\"nav-link\" to=\"/edit-profile\">{props.loggedInUser.username}</Link>\n                    </li>\n\n                    <li className=\"nav-item \">\n                            <button className=\"nav-link logout-btn btn-primary btn\" onClick={props.onLogout}>Logout</button>\n                    </li>\n\n                    </div>\n\n                ) : (\n                    <>\n\n                    <li className=\"nav-item\">\n                         <Link className=\"nav-link\" to=\"/sign-in\">Sign in</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/sign-up\">Sign up</Link>\n                    </li>\n                    </>\n                )\n            }\n        </ul>\n        </nav>\n    )\n}\n\n\n// <!-- Image and text -->\n\n//   <a class=\"navbar-brand\" href=\"#\">\n//     <img src=\"/docs/4.0/assets/brand/bootstrap-solid.svg\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n//     Bootstrap\n//   </a>\n","import React from 'react';\nimport bball from './b-ball.png'\n\nexport default function Signin(props) {\n    return(\n        <form onSubmit={props.onSignIn} className=\"form-container\">\n        <img className=\"bball\" src= {bball}></img>\n        <h2>Please Sign In</h2>\n        \n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\"></label>\n                <input className=\"input\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Email address\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\"></label>\n                <input name=\"password\" type=\"password\" className=\"form-control input\" id=\"exampleInputPassword1\" placeholder=\"Password\"/> \n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n    )\n}\n","import React from 'react';\n\nexport default function Signup(props) {\n    return(\n        <form onSubmit={props.onSignUp} className=\"form-container\">\n            <div className=\"form-group\" >\n                <label htmlFor=\"exampleInputUsername\">Username</label>\n                <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" name=\"username\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" className=\"form-control input\" id=\"exampleInputEmail1\" name=\"email\" aria-describedby=\"emailHelp\" />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputUsername\">City</label>\n                <input type=\"text\" className=\"form-control input\" id=\"location\" name=\"location\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input name=\"password\" type=\"password\" className=\"form-control input\" id=\"exampleInputPassword1\" />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n    )\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport config from '../config';\nimport Map from './Map'\n\n\nexport default class UserMain extends React.Component {\n\n    state = {\n        games: []\n\n    }\n\n    getGames = () => {\n        axios.get(`${config.API_URL}/user-main`, {withCredentials: true})\n          .then((res) => {\n            this.setState({\n              games: res.data\n            })\n          })\n          .catch((err) => {\n            if(err.response.status === 401) {\n              this.props.history.push('/')\n            }\n          })  \n      }\n\n    //   getUser(){\n    //     axios.get(`${config.API_URL}/user`, {withCredentials: true})\n    //     .then((res) => {\n    //       // console.log(res + 'ResuLT')\n    //       this.setState({\n    //         loggedInUser: res.data\n    //       })\n    //     })\n          \n    //   }\n      componentDidMount(){\n        // this.getUser()\n        this.getGames();\n        // console.log(this.state)\n       \n        \n      }\n\n    render() {\n\n        //REDIRECTS USER TO SIGN IN IF NOT LOGGED IN\n    if (!this.props.loggedInUser) {\n        return <Redirect to='/sign-in' />\n    }\n    console.log('Games from User Main:   ---   ' + this.state.games)\n    const games = this.state.games\n    return(\n        <div >\n            {/* <h1>Main User Page</h1> */}\n            <div className='main-header'>\n                <h2 className=\"hello-text\">Hello {this.props.loggedInUser.username}</h2>\n                <Link to=\"/create-game\"><button className=\"btn btn-primary create-btn\">Create A Game</button></Link>\n            </div>\n            \n            <div className=\"user-main-main\">\n            <div className=\"user-main-div\">\n\n                <h4 className='title-header'>Games Near You</h4>\n\n                <div class=\"row \">\n                \n                    <div class=\"games-near-you\">\n\n                    <Map className=\"map\"\n                        loggedInUser={this.props.loggedInUser}\n                    \n                />\n                        \n                            {/* SHOW GAMES IN YOUR CITY */}\n                                {/* {\n                                    this.state.games.map((el, index) => {\n                                        if (el.city === this.props.loggedInUser.location && el.createdBy !== this.props.loggedInUser.username  && !el.players.includes(this.props.loggedInUser._id)) {\n                                            return <div className=\"card each-card\"> \n                                                <div className=\"card-body\" key={index} id=\"game\">\n                                        \n                                            <p>Date: {el.date}</p>\n                                            <p className=\"text-info\">Location: {el.location}</p>\n                                            <p className=\"text-info\">Created By: {el.createdBy}</p>\n                                        \n                                            <p className={el.maxPlayers > el.players.length ? \"text-success\" : \"text-danger\"}>Players: {el.players.length}/{el.maxPlayers}</p>\n                                            {(el.players.length + 2 === el.maxPlayers) || (el.players.length + 1 === el.maxPlayers) ?  <p className=\"text-danger\">Almost full!</p> : <p></p>}\n                                            {el.maxPlayers === el.players.length ? <p className=\"text-danger\">FULL</p> : <p></p>}\n                                \n                                            <Link to={`/game-detail/${el._id}`}><button className=\"btn btn-primary\">View Details</button></Link>\n                                        </div>\n                                    </div>\n                                        }  \n                                    })\n                                } */}\n                    </div>\n                </div>\n            </div>\n            <div>\n            <h4 className=\"title-header\">Your Games</h4>\n            <div className=\"your-games\">\n                \n                <div className=\"row\">\n                \n                    <div class=\"games-near-you\">\n\n                        {/* SHOW GAMES YOU MADE */}\n\n                        {\n                            this.state.games.map((el, index) => {\n                                if (el.createdBy === this.props.loggedInUser.username) {\n                                    return <div class=\"card each-card\">\n                                    <div class=\"card-body\" key={index} id=\"game\">\n                                \n                                    <p>Date: {el.date}</p>\n                                    <p className=\"text-success\" >Location: {el.location}</p>\n                                    <p className=\"text-success\">Created By: {el.createdBy}</p>\n                                \n                                    <p className={el.maxPlayers > el.players.length ? \"text-success\" : \"text-danger\"}>Players: {el.players.length}/{el.maxPlayers}</p>\n                                    {(el.players.length + 2 === el.maxPlayers) || (el.players.length + 1 === el.maxPlayers) ?  <p className=\"text-danger\">Almost full!</p> : <p></p>}\n                                    {el.maxPlayers === el.players.length ? <p className=\"text-danger\">FULL</p> : <p></p>}\n                        \n                                    <br></br>\n                                    <Link to={`/${el._id}/admin`}><button className=\"btn btn-primary\">View Details</button></Link>\n                                </div>\n                            </div>\n                                }  \n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n\n            <h4 className=\"title-header\">Upcoming Games For You</h4>\n            <div className=\"your-games\">\n                \n                <div className=\"row\">\n                \n                    <div class=\"games-near-you\">\n\n                    {/* SHOW GAMES YOU JOINED */}\n                        {\n                            this.state.games.map((el, index) => {\n                                if (el.city === this.props.loggedInUser.location && el.createdBy !== this.props.loggedInUser.username && el.players.includes(this.props.loggedInUser._id)) {\n                                    return <div class=\"card each-card\">\n                                    <div class=\"card-body\" key={index} id=\"game\">\n                                \n                                    <p>Date: {el.date}</p>\n                                    <p className=\"text-success\" >Location: {el.location}</p>\n                                    <p className=\"text-success\">Created By: {el.createdBy}</p>\n                                \n                                    <p className={el.maxPlayers > el.players.length ? \"text-success\" : \"text-danger\"}>Players: {el.players.length}/{el.maxPlayers}</p>\n                                    {el.maxPlayers === el.players.length ? <p className=\"text-danger\">FULL</p> : <p></p>}\n                                   \n                        \n                                    <br></br>\n                                    <Link to={`/game-detail/${el._id}`}><button className=\"btn btn-primary\">View Details</button></Link>\n                                </div>\n                            </div>\n                                }  \n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n                \n            </div>\n\n            </div>\n            \n            \n\n\n        </div>\n\n        \n    )\n\n    }\n\n    \n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'\nimport config from '../config';\nimport Map from \"./Map\"\nimport '../App.css';\nimport SearchCity from './SearchCity'\n\n\n\n// import usePlacesAutoComplete, {\n//     getGeocode,\n//     getLatLng,\n// } from \"use-places-autocomplete\";\n\n// import {\n//     Combobox,\n//     ComoboboxInput,\n//     ComboboxList,\n//     ComboboxOption,\n// } from \"@reach/combobox\";\n\n\nexport default class CreateGame extends React.Component {\n\n    state = {\n        teams: []\n    }\n\n    componentDidMount(){\n\n        \n        axios.get(`${config.API_URL}/teams`, {withCredentials: true})\n            .then((res) => {\n                this.setState({\n                    teams: res.data,\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n    \n    \n\n    render() {\n        \n        if (!this.props.loggedInUser) {\n            //REDIRECTS USER TO SIGN IN IF NOT LOGGED IN\n            return <Redirect to='/sign-in' />\n        }\n\n    \n\n\n        return(\n\n            \n            \n            <div className=\"create-game-main\">\n            <h1>Create Game Page</h1>\n            \n            <form onSubmit={this.props.onAddGame}>\n                    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"Date\">Date</label>\n                        <input type=\"date\" className=\"form-control\" name=\"date\" id=\"date\" required/>\n                    </div>\n    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"location\">location</label>\n                        {/* <input type=\"text\" className=\"form-control\" name=\"location\" id=\"location\" required/> */}\n                        <div>\n                            <SearchCity \n                            panTo={this.props.handleLocationInput}\n                         \n                        />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"maxPlayers\">Max Players</label>\n                        <input type=\"text\" className=\"form-control\" name=\"maxPlayers\" id=\"maxPlayers\" required/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label for=\"team\">Use a Team?</label>\n                        <select name=\"team\" id=\"team\">\n                            <option>No team selected</option>\n                            {this.state.teams.map((team, index)=>{\n                                if(this.props.loggedInUser.username === team.owner) { return <option key={index} value={team.players}>{team.teamName}</option>}  \n                                \n                            })}\n                        </select>\n                    </div>\n                    \n                    <input type=\"file\" name=\"image\"></input>\n                    <input type=\"time\" name=\"time\"></input>\n    \n                    <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n                </form>\n               \n            \n            \n            </div>\n        )\n\n    }\n   \n}\n\n","import React from 'react';\nimport axios from 'axios'\nimport config from '../config';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom'\n\n\nexport default class GameDetail extends React.Component {\n\n    state = {\n        player: '',\n        game: '',\n    }\n\n    \n    componentDidMount(){\n\n        let id = this.props.match.params.gameId\n        // console.log('Users on Game Deatail Page: ' + this.props.users)\n        axios.get(`${config.API_URL}/game-detail/${id}`, {withCredentials: true})\n            .then((res) => {\n                // console.log('Info' + res.data)\n                this.setState({\n                    game: res.data,\n                    player: this.props.loggedInUser.username\n                    \n                })\n                console.log(res.data + 'SBDI/&&/&&/&&&&&66666')\n                // console.log(this.state.game)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n    // ADD PLAYER TO GAME\n    handleJoinGame = () => {\n          \n        // console.log(this.state.player)\n        let {location, date, createdBy} = this.state.game\n        const list = this.state.game.players.concat(this.state.player);\n        if(!this.state.game.players.includes(this.state.player)){\n            if(this.state.game.players.length !== this.state.game.maxPlayers){\n                this.sendNewPlayers()\n                this.setState( {\n                    game: {\n                        location: location,\n                        date: date,\n                        createdBy: createdBy,\n                        players: list\n                    }\n                }, () => {\n                    this.props.history.push('/user-main')\n                  })\n\n            } else {\n                \n                    alert('Game is full.')\n                \n            }\n                 \n        } \n    }\n\n    //SEND PLAYERS TO DB\n    sendNewPlayers = () => {\n        let id = this.props.match.params.gameId\n        axios.get(`${config.API_URL}/join-game/${id}`, {withCredentials: true})\n        .then((res) => {\n            // console.log(res)         \n        })\n        .catch((err) => {\n            console.log(err + 'ERRRRRRR')\n        })\n    }\n\n\n    handleQuitGame = (e) => {\n        \n        let id = e.target.value\n        \n        console.log('gameId:' + id)\n        console.log('user ' + this.props.loggedInUser._id)\n        let confirmQuit = window.confirm(`Are really a quitter?`);\n        if (confirmQuit) {\n                axios.get(`${config.API_URL}/quit-game/${id}`, {withCredentials: true})\n            .then((res) => {\n                console.log(res.data + \"success\")\n                this.props.history.push('/user-main')\n            })\n            .catch((err)=> {\n                console.log('Game delete error client side' + err)\n            })\n   \n        }\n        \n            \n    }\n\n\n    render() {\n\n        if (!this.props.loggedInUser) {\n            return <Redirect to='/sign-in' />\n        }\n        const {location, date, createdBy, players, _id} = this.state.game\n        console.log('players:  ' + typeof players) \n            let userNames = []\n            for (let i = 0; i< this.props.users.length; i++){\n                for (const prop in players){\n                    console.log(players[prop])\n                  if(this.props.users[i]._id === players[prop]){\n\n                   userNames.push(this.props.users[i].username)\n                  }\n                }\n            }\n            \n            console.log(userNames)\n            \n        \n        return(\n            <div className=\"game-detail-page\">\n                <div className=\"game-card card\">\n                    <h1>Game Detail Page</h1>\n                        <p>Location: {location}</p>\n                        <p>Date: {date}</p>\n                        <p>Created By: {createdBy}</p>\n                        <p>Players: {userNames.map((name)=> {\n                            return name\n                        })}</p>\n                        <div>\n                        {\n                            !userNames.includes(this.props.loggedInUser.username) ? <button className=\"btn btn-primary\" onClick={this.handleJoinGame} type=\"submit\">Join</button> : <div>\n                            <p>You are scheduled to play this game.</p> \n                            <button className=\"btn btn-danger\" value={_id} onClick={this.handleQuitGame}>Leave Game</button>\n                            </div>\n                        }\n                        \n                        </div>\n\n                </div>\n            \n                \n            </div>\n        )\n\n    }  \n    \n}","import React from 'react';\nimport axios from 'axios'\nimport config from '../config';\n\nexport default class TeamsDetail extends React.Component {\n\n    state = {\n        game: '',\n        team: ''\n        \n    }\n//QUESTION: DO I NEED TO CALL getUser() EVERY PAGE?\n    componentDidMount(){\n        console.log('game::::' + this.state.game)\n        let id = this.props.match.params.gameId\n        axios.get(`${config.API_URL}/game-detail/${id}`, {withCredentials: true})\n            .then((res) => {\n            // console.log('GAME DETAIL' + res.data)                \n\n                this.setState({\n                    game: res.data,\n                })\n                // console.log(this.state.game)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    saveTeam = (e) => {\n        e.preventDefault()\n      \n        let id = this.props.match.params.gameId\n        let owner = this.props.loggedInUser.username\n        // console.log(owner)\n        let teamName = e.target.teamName.value\n        let homeTown = this.props.loggedInUser.location\n        const list = this.state.game.players;\n        if(this.state.game.maxPlayers === this.state.game.players.length){\n            axios.post(`${config.API_URL}/${id}/save-team`, {\n                owner: owner,\n                teamName: teamName,\n                hoometown: homeTown,\n                players: list\n                \n                \n            }, {withCredentials: true})\n            .then((res) => {\n                this.setState({\n                    team: {\n                        teamName: teamName,\n                        players: list\n                    } \n                })\n                this.props.history.push('/team-info')\n    \n            })\n            .catch((err) => {\n                console.log(err + 'Axios Error!!!!')\n            })\n\n        } else {\n            alert('Game must be full to form a team!')\n        }\n        \n    }\n\n    render() {\n\n        const {players} = this.state.game\n         //FIND NAMES BY ID\n            let userNames = []\n            for (let i = 0; i< this.props.users.length; i++){\n                for (const prop in players){\n                  if(this.props.users[i]._id === players[prop]){\n                     userNames.push(this.props.users[i].username)\n                  }\n                }\n            }\n            \n            \n        \n        return(\n            <div className=\"game-detail-page\">\n            <h1>Team Detail Page</h1>\n\n            <form onSubmit={this.saveTeam}>\n                <input type=\"text\" placeholder=\"Name your team?\" name=\"teamName\" id=\"teamName\" required/> \n               <div className=\"team-players\">\n                    <div>\n                        <h4>Players:</h4> \n                        {userNames.map((name)=> {\n                            return <p>{name}</p>\n                            })}\n                    </div>\n                    \n                    <button className=\"btn btn-primary create-team-btn\">Save Team</button>\n               </div>\n                \n                    \n            </form>\n           \n                \n                \n            </div>\n        )\n\n    }\n    \n}","import React from 'react';\nimport axios from 'axios'\nimport config from '../config';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom'\nimport TeamDetail from './TeamDetail'\n\n\n\nexport default class GameAdmin extends React.Component {\n\n    state = {\n        player: '',\n        game: '',\n    }\n\n    \n    \n    componentDidMount(){\n        let id = this.props.match.params.gameId\n        // console.log('id is ' + this.props.match.params)\n        axios.get(`${config.API_URL}/game-detail/${id}`, {withCredentials: true})\n            .then((res) => {\n                // console.log('Info' + res.data)\n                this.setState({\n                    game: res.data,\n                    player: this.props.loggedInUser.username\n                })\n                // console.log(this.state.game)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    render() {\n\n        if (!this.props.loggedInUser) {\n            return <Redirect to='/sign-in' />\n        }\n        const {location, date, createdBy, players, _id} = this.state.game\n        console.log('players:  ' + typeof players) \n            let userNames = []\n            for (let i = 0; i< this.props.users.length; i++){\n                for (const prop in players){\n                    console.log(players[prop])\n                  if(this.props.users[i]._id === players[prop]){\n\n                   userNames.push(this.props.users[i].username)\n                  }\n                }\n            }\n            \n            console.log(userNames)\n            \n        \n        return(\n            <div className=\"game-detail-page\">\n                <div className=\"game-card card\">\n                    <h1>Game Detail Page Admin</h1>\n                    <p>Location: {location}</p>\n                    <p>Date: {date}</p>\n                    <p>Created By: {createdBy}</p>\n                    <p>Players: {userNames.map((name)=> {\n                        return name\n                    })}</p>\n\n                </div>\n            \n                <Link to={`/${_id}/admin/team-detail`}><button className=\"btn btn-primary\" onClick={this.makeTeam} type=\"submit\">Save Group as Team</button></Link>\n            </div>\n        )\n\n    }\n    \n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ChatInput extends Component {\n  static propTypes = {\n    onSubmitMessage: PropTypes.func.isRequired,\n  }\n  state = {\n    message: '',\n  }\n\n  render() {\n    return (\n      <div >\n      <form\n        \n        action=\".\"\n        onSubmit={e => {\n          e.preventDefault()\n          this.props.onSubmitMessage(this.state.message)\n          this.setState({ message: '' })\n        }}\n      >\n      <div>\n        <input\n            type=\"text\"\n            placeholder={'Enter message...'}\n            value={this.state.message}\n            onChange={e => this.setState({ message: e.target.value })}\n          />\n        \n        <input type=\"submit\" value={'Send'} />\n\n      </div>\n      </form>\n      </div>\n    )\n  }\n}\n\n ","import React from 'react'\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport bball from './b-ball.png'\n\nexport default ({ name, message, loggedInUser }) =>\n\n    <div className={loggedInUser.username.split(' ').slice(0, -1).join(' ') === name ? \"chat-container\" : \"chat-container darker\"}>\n        <img src={bball} alt=\"Avatar\" className={loggedInUser.username.split(' ').slice(0, -1).join(' ') === name ? \"right\" : \"\"}></img>\n        <p>\n        <strong className={loggedInUser.username.split(' ').slice(0, -1).join(' ') === name ? \"user-chat-name\" : \"\"}>{name}</strong>:  <em>{message}</em>\n        </p>\n\n    </div>\n    \n\n\n  ","import React, { Component } from 'react'\nimport ChatInput from './ChatInput'\nimport ChatMessage from './ChatMessage'\nimport { Redirect } from 'react-router-dom';\n\nconst URL = 'ws://localhost:3030'\n\nclass Chat extends Component {\n  state = {\n    name: this.props.loggedInUser.username,\n    messages: [],\n  }\n\n  ws = new WebSocket(URL)\n\n  componentDidMount() {\n    this.ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected')\n      \n    }\n\n    this.ws.onmessage = evt => {\n      // on receiving a message, add it to the list of messages\n      const message = JSON.parse(evt.data)\n      this.addMessage(message)\n      console.log(evt.data + 'WHAT IS THIS?')\n    }\n\n    this.ws.onclose = () => {\n      console.log('disconnected')\n      // automatically try to reconnect on connection loss\n      this.setState({\n        ws: new WebSocket(URL),\n      })\n    }\n  }\n\n  addMessage = message => {\n    this.setState(state => ({ messages: [message, ...state.messages] }))\n    console.log(this.state.messages + 'WHAT IS THIS?')\n  }\n\n  submitMessage = messageString => {\n    // on submitting the ChatInput form, send the message, add it to the list and reset the input\n    const date = new Date()\n    const message = { name: this.props.loggedInUser.username.split(' ').slice(0, -1).join(' '), message: messageString, date:date  }\n    this.ws.send(JSON.stringify(message))\n    this.addMessage(message)\n  }\n\n  render() {\n    if (!this.props.loggedInUser) {\n      //REDIRECTS USER TO SIGN IN IF NOT LOGGED IN\n      return <Redirect to='/sign-in' />\n  }\n    return (\n      <div>\n        <label htmlFor=\"name\">\n          Hello {this.props.loggedInUser.username}\n          \n        </label>\n        <div className=\"messages-container\">\n          {this.state.messages.map((message, index) =>\n            <ChatMessage\n              key={index}\n              message={message.message}\n              name={message.name}\n              loggedInUser={this.props.loggedInUser}\n            />,\n          )}\n\n        </div>\n        <div className=\"chat-input \">\n          <ChatInput\n            ws={this.ws}\n            onSubmitMessage={messageString => this.submitMessage(messageString)}\n          />\n\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default Chat","import React, { Component } from 'react'\nimport Chat from './Chat'\nimport bball from './b-ball.png'\n\nexport default class ChatPage extends Component {\n  render() {\n    return (\n      <div className=\"App chat-box\">\n      <h4 className=\"App-title\">Welcome to Hoop Chat</h4>\n        <div>\n            <Chat loggedInUser={this.props.loggedInUser}/>\n\n        </div>\n          \n        \n        \n      </div>\n    )\n  }\n}\n\n","import React from 'react'\nimport axios from 'axios'\nimport config from '../config';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport ChatPage from './ChatPage'\nimport ChatInput from './ChatInput'\nexport default class EachTeam extends React.Component {\n\n    state = {\n        team: ''\n    }\n\n\n    componentDidMount(){\n        let id = this.props.match.params.teamId\n       axios.get(`${config.API_URL}/each-team/${id}`, {withCredentials: true})\n        .then((res) => {\n          this.setState({\n            team: res.data\n          })\n          console.log(this.state)\n\n        })\n        .catch((err) => {\n            console.log('Error getting team:  ' + err)\n        })\n        console.log(id)\n      }\n    \n      //FOR DISPLAYING CHAT\n       openForm = () => {\n        document.getElementById(\"myForm\").style.display = \"block\";\n      }\n      \n       closeForm = () => {\n        document.getElementById(\"myForm\").style.display = \"none\";\n      }\n\n\n    render(){\n\n        let { owner, teamName, homeTown, gamesPlayed, players } = this.state.team\n        //PUSH REF IDS TO NEW ARRAY FOR SOME REASON?!?!\n        let doobs = []\n        for(const player in players){\n            doobs.push(players[player])\n            \n       }\n\n        return(\n            <div className=\"games-near-you main-header\">\n            <h1>{teamName}</h1>\n               {\n                <div className=\"card game-card \">\n                   \n                   <p>Owner: {owner}</p>\n                   <p>Hometown: {homeTown}</p>\n                   <p>Players: {\n                       doobs.map((player) => {\n                           return player.username\n                       })\n                   }</p>\n                   \n               </div>\n\n               }\n\n               <ChatPage \n                   loggedInUser = {this.props.loggedInUser}\n               />\n\n                \n               \n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios'\nimport config from '../config';\nimport { Redirect } from 'react-router-dom';\nimport EachTeam from './EachTeam'\nimport {Switch, Route} from 'react-router-dom'\nimport {Link} from 'react-router-dom'\n\n\nexport default class TeamsInfo extends React.Component {\n   \n    state = {\n        teams: []\n    }\n\n    componentDidMount(){\n        \n            \n            console.log(this.state.teams + 'These are teams!')\n            axios.get(`${config.API_URL}/teams`, {withCredentials: true})\n                .then((res) => {\n                    // console.log('Info' + res.data)\n                    this.setState({\n                        teams: res.data,\n                    })\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n                // console.log('Team pLayers on Team Info Page: ' + this.state.teams)\n    }\n\n    handleQuitTeam = (val1, val2,e) => {\n        let name = val1\n        let id = val2\n        let confirmQuit = window.confirm(`Are you sure you want to quit the team ${name}?`);\n        if (confirmQuit) {\n                axios.post(`${config.API_URL}/quit-team/${id}`, {}, {withCredentials: true})\n            .then((res) => {\n                this.props.history.push('/user-main')\n                console.log('Client Side works ' + this.props.loggedInUser._id + ' from ' + id)\n                this.setState({\n                    teams: res.data,\n                })\n                \n            })\n            .catch((err)=> {\n                console.log('Something went wrong deleting from team on the client side' + err)\n            })\n        }     \n    }\n\n    handleDisbandTeam = (e) => {\n        let id = e.target.value\n        console.log(id)\n\n        let confirmQuit = window.confirm('Are you sure you want to diband this team?');\n        if (confirmQuit) {\n                axios.delete(`${config.API_URL}/disband-team/${id}`, {withCredentials: true})\n            .then((res) => {\n                this.props.history.push('/user-main')\n                console.log('Client Side works to delete team ')\n                this.setState({\n                    teams: res.data,\n                })\n                \n            })\n            .catch((err)=> {\n                console.log('Something went wrong deleting team on the client side' + err)\n            })\n        }     \n\n    }\n\n\n\n    render() {\n        if (!this.props.loggedInUser) {\n            return <Redirect to='/sign-in' />\n        }\n\n        let playerIds = []\n        let playerNames = []\n        // GET PLAYER IDS FROM TEAM OBJECT\n        if(this.state.teams.length){\n            this.state.teams.map((team) => {\n                team.players.forEach((eachId)=> {\n                    playerIds.push(eachId)\n                })\n            })\n\n        }\n         \n        //TEST PLAYER IDS AGAINST USER IDS AND ADD NAMES TO ARRAY\n        for(let i = 0; i< this.props.users.length; i++){\n            for(let j=0; j<playerIds.length; j++){\n                if(this.props.users[i]._id === playerIds[j]){\n                    playerNames.push(this.props.users[i].username)\n                }\n            }\n        }\n        //REMOVE DUPLICATES FROM NAMES ARRAY\n        let uniqueArray = playerNames.filter(function(item, pos, self) {\n            return self.indexOf(item) == pos;\n        })\n        // console.log(playerNames + \"IOUBI/ZGUSA\")\n\n        return(\n            <div className=\"game-detail-page row\">\n            <h1>Teams Info Page</h1>\n                <div className=\"games-near-you\">\n                    {/* {uniqueArray.slice(0,1).map((team, index)=> {\n            return !team.includes(this.props.loggedInUser.username) ? <h3>Nobody Likes You...</h3> : <p></p>}\n            )} */}\n                        \n                        {this.state.teams.map((team, index)=> {\n                            if(team.players.includes(this.props.loggedInUser._id))\n                            return <div key={index} className=\"card each-card team-info-card\">\n                                <Link to={`/each-team/${team._id}`}><p>Team Name: {team.teamName}</p></Link>\n                                <p>Owner: {this.props.loggedInUser.username !== team.owner ? team.owner : 'You'}</p>\n                                <p>Home Town: {team.homeTown}</p>\n\n                            <p>Games Played: {!team.gamesPlayed ? 0  : team.gamesPlayed}\n                            </p>\n\n                        <div>\n                            <p><strong>Players:</strong></p>\n                            {\n                                uniqueArray.map((name)=> {\n                                    return <p>{name}</p>\n                                })\n                            }\n                        </div>\n                        {\n                            //CHANGE BUTTON DEPENDING ON OWNER OF TEAM OR NOT\n                            this.props.loggedInUser.username === team.owner ? <button className=\"btn btn-primary quit-team-btn\" value={team._id} onClick={this.handleDisbandTeam}>Disband Team</button> \n                            : <button className=\"btn btn-primary quit-team-btn\" value={team.teamName, team._id} onClick={this.handleQuitTeam.bind(this, team.teamName, team._id )}>Quit Team</button>\n                        }\n                        \n                        \n                    </div>\n                    \n                    \n                })}\n\n                </div>\n                \n            </div>\n        )\n\n    }\n\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport axios from 'axios'\nimport {Switch, Route} from 'react-router-dom'\nimport {withRouter} from 'react-router-dom'\nimport config from './config';\n\nimport EditProfile from './components/EditProfile'\nimport Home from './components/Home'\nimport Nav from './components/Nav'\nimport Signin from './components/Signin'\nimport Signup from './components/Signup'\nimport UserMain from './components/UserMain'\nimport CreateGame from './components/CreateGame'\nimport GameDetail from './components/GameDetail'\nimport GameAdmin from './components/GameAdmin'\n\nimport TeamsInfo from './components/TeamsInfo'\nimport TeamDetail from './components/TeamDetail'\nimport EachTeam from './components/EachTeam'\n\nimport ChatPage from './components/ChatPage'\nimport { lastDayOfDecade } from 'date-fns';\nimport { object } from 'prop-types';\n\n\nclass App extends React.Component {\n\n\n  state = {\n    loggedInUser: '',\n    games:[],\n    users:[],\n    location:'',\n    city:'',\n    lat: null,\n    lng: null\n  }\n\n  getUser(){\n    axios.get(`${config.API_URL}/user`, {withCredentials: true})\n    .then((res) => {\n      // console.log(res + 'ResuLT')\n      this.setState({\n        loggedInUser: res.data\n      })\n    })\n      \n  }\n\n  getUsers(){\n    axios.get(`${config.API_URL}/users`,{withCredentials: true})\n    .then((res)=> {\n      this.setState({\n        users:res.data\n      })\n    })\n  }\n\n  getGames = () => {\n    axios.get(`${config.API_URL}/main`, {withCredentials: true})\n      .then((res) => {\n        this.setState({\n          games: res.data\n        })\n      })\n      .catch((err) => {\n        if(err.response.status === 401) {\n          this.props.history.push('/')\n        }\n      })  \n  }\n\n  componentDidMount(){\n    this.getGames();\n    this.getUsers();\n    console.log('MOUNTED' + this.state.loggedInUser)\n   \n    if (!this.state.loggedInUser) {\n      this.getUser();\n      // console.log('GOT USER')\n    }\n    console.log(this.state)\n    \n\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault()\n    let email = e.target.email.value;\n    let username = e.target.username.value\n    let password = e.target.password.value\n    let location = e.target.location.value\n    axios.post(`${config.API_URL}/sign-up`, { //FROM CONFIG.JS\n      email: email,\n      username: username,\n      password: password,\n      location: location\n      \n    }, { withCredentials: true}) //CHECKS COOKIES\n    .then((res) => {\n        this.setState({\n          loggedInUser: res.data\n        }, () => {\n          this.props.history.push('/user-main')\n        })\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  handleSignIn = (e) => {\n    e.preventDefault();\n    let email = e.target.email.value;\n    let password = e.target.password.value\n    \n    axios.post(`${config.API_URL}/sign-in`, {\n      email: email,\n      password: password\n    }, {withCredentials: true})\n    .then((res) => {\n      // console.log('RESDATA'+res.data)\n      this.setState({\n        loggedInUser: res.data\n      }, () => {\n        this.props.history.push('/user-main')\n      })\n    })\n  }\n\n  handleLogout = () => {\n    console.log(document.cookie)\n    axios.post(`${config.API_URL}/logout`, {}, { withCredentials: true})\n    .then((res) => {\n      // console.log(res)\n      this.setState({\n        loggedInUser: null\n      }, () => {\n        this.props.history.push('/')\n      })\n    })\n  }\n\n  \n   handleLocationInput = (obj) => {\n      this.setState({\n          location: obj.address,\n          city: obj.value,\n          lat: obj.lat,\n          lng: obj.lng\n      })\n    // console.log(obj)\n     \n}\n\n\n  handleAddGame = (e) => {\n    e.preventDefault()\n\n    // console.log(this.handleLocationInput())\n    let date = e.target.date.value\n    let location = this.state.location\n    let time = e.target.time.value\n    let city = this.state.city\n    let lat = this.state.lat\n    let lng = this.state.lng\n    let maxPlayers = e.target.maxPlayers.value\n    let team;\n    if(e.target.team.value === 'No team selected'){\n      team = this.state.loggedInUser._id\n    } else{\n      team = e.target.team.value.split(',')\n    }\n    axios.post(`${config.API_URL}/create-game`, {\n      date: date,\n      time: time,\n      location: location,\n      city: city,\n      lat: lat,\n      lng: lng,\n      maxPlayers: maxPlayers,\n      createdBy: this.state.loggedInUser.username,\n      players: team\n    }, {withCredentials: true})\n    .then((res) => {\n      console.log('GOT GAME')\n      this.setState({\n        games: [...this.state.games, res.data]\n      }, () => {\n        this.props.history.push('/user-main')\n      })\n    })\n    .catch((err) => {\n      if(err.response.status === 401) {\n        console.log(err.response.status)\n      }\n    })\n}\n\n\n\n  render() {\n    const {loggedInUser} = this.state\n    return (\n      <div >\n      <Nav \n      loggedInUser={this.state.loggedInUser}\n      onLogout={this.handleLogout}\n       />\n        <Switch>\n          <Route exact path=\"/\"  render={() => {\n                return <Home \n                games={this.state.games}\n                loggedInUser={this.state.loggedInUser}\n                users={this.state.users}\n                // getUser={this.getUser}\n                // getGames={this.getGames}\n                />\n              }}/>\n          <Route path=\"/sign-in\"  render={() => {\n              return <Signin \n              onSignIn={this.handleSignIn} />\n            }}/>    \n          <Route path=\"/sign-up\"  render={() => {\n              return <Signup onSignUp = {this.handleSignUp} />\n            }}/>  \n            <Route path=\"/edit-profile\"  render={() => {\n              return <EditProfile \n              loggedInUser={loggedInUser}\n              games={this.state.games}\n              users={this.state.users}\n              />\n            }}/>\n          <Route path=\"/user-main\"  render={() => {\n              return <UserMain \n              loggedInUser={loggedInUser}\n              games={this.state.games}\n              users={this.state.users}\n              />\n            }}/>  \n          <Route path=\"/team-info\"  render={(routeProps) => {\n              return <TeamsInfo \n              loggedInUser={loggedInUser} \n              {...routeProps}\n              users={this.state.users}\n              />\n            }}/> \n          <Route path=\"/create-game\"  render={() => {\n              return <CreateGame \n              loggedInUser={loggedInUser} \n              onAddGame={this.handleAddGame} \n              useTeam={this.handleUseTeam} \n              handleLocationInput={this.handleLocationInput}\n              />\n            }}/>  \n           <Route exact path=\"/game-detail/:gameId\"  render={(routeProps) => {\n              return <GameDetail \n              loggedInUser={loggedInUser} \n              {...routeProps}\n              users={this.state.users}\n               \n              />\n            }}/>   \n           <Route exact path=\"/:gameId/admin\"  render={(routeProps) => {\n              return <GameAdmin \n              loggedInUser={loggedInUser} \n              {...routeProps}\n              users={this.state.users}\n               \n              />\n            }}/>    \n            <Route path=\"/:gameId/admin/team-detail\"  render={(routeProps) => {\n              return <TeamDetail \n              loggedInUser={loggedInUser} \n              {...routeProps}\n              users={this.state.users}\n               \n              />\n            }}/>\n            \n            <Route path=\"/each-team/:teamId\"  render={(routeProps) => {\n              return <EachTeam \n              loggedInUser={loggedInUser} \n              {...routeProps}\n              users={this.state.users}\n               \n              />\n            }}/>\n            \n\n        </Switch>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}